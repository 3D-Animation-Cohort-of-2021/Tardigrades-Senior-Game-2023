//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/DEBUG/Inputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Inputs : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Inputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Inputs"",
    ""maps"": [
        {
            ""name"": ""TardigreBasicActions"",
            ""id"": ""e30d3461-2fb6-4e86-bfa9-2b7124b8007e"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""b13b0224-46dc-4f52-8185-02fbed8afd13"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""A"",
                    ""type"": ""Button"",
                    ""id"": ""47086f3c-3492-4a33-95b4-549ec0e9ae22"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""B"",
                    ""type"": ""Button"",
                    ""id"": ""ed664abb-c36d-4f35-9722-46b933314c58"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Y"",
                    ""type"": ""Button"",
                    ""id"": ""466e2f71-435d-4825-ae5d-545e22b2fde4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""X"",
                    ""type"": ""Button"",
                    ""id"": ""f6a2c4dd-306e-45a6-810f-2c6babe94557"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightTrigger"",
                    ""type"": ""Value"",
                    ""id"": ""03d8e4e0-8b81-4e53-b308-ed665fbd4b8b"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftTrigger"",
                    ""type"": ""Value"",
                    ""id"": ""9ed00a3e-eda1-4e54-8117-579d106e8869"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""726a3996-d486-45df-9159-7853049e68af"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""b69daefa-7c74-410b-9b29-86d4dce66736"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""67b0f701-4616-4fd5-a09c-995bfbb67315"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""48d97ffc-b910-4960-97de-74ba75f2eb91"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""beaf4d69-d902-4032-b41b-46951414149d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""75316bd4-2456-422f-ac7c-190b2b80be5d"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6c91e167-dc48-4674-9ff2-75e8056b6741"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""001db050-a3c1-48f5-9981-53060b78303e"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d89b405-2d43-4535-a681-d7dac8887267"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""B"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ab83b4ff-2e9b-4f01-8f07-12df6e268c0b"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Y"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d676ecbc-4caa-49b2-bc7a-c663eaf593b1"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""X"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""83c9819e-8fa6-4963-8531-106a4e2fd831"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""X"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7c4a539a-98f6-4ccf-944c-1ce423f903a0"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightTrigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""381dd1d4-e823-4719-b8e5-d9bad724d541"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftTrigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // TardigreBasicActions
        m_TardigreBasicActions = asset.FindActionMap("TardigreBasicActions", throwIfNotFound: true);
        m_TardigreBasicActions_Move = m_TardigreBasicActions.FindAction("Move", throwIfNotFound: true);
        m_TardigreBasicActions_A = m_TardigreBasicActions.FindAction("A", throwIfNotFound: true);
        m_TardigreBasicActions_B = m_TardigreBasicActions.FindAction("B", throwIfNotFound: true);
        m_TardigreBasicActions_Y = m_TardigreBasicActions.FindAction("Y", throwIfNotFound: true);
        m_TardigreBasicActions_X = m_TardigreBasicActions.FindAction("X", throwIfNotFound: true);
        m_TardigreBasicActions_RightTrigger = m_TardigreBasicActions.FindAction("RightTrigger", throwIfNotFound: true);
        m_TardigreBasicActions_LeftTrigger = m_TardigreBasicActions.FindAction("LeftTrigger", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // TardigreBasicActions
    private readonly InputActionMap m_TardigreBasicActions;
    private ITardigreBasicActionsActions m_TardigreBasicActionsActionsCallbackInterface;
    private readonly InputAction m_TardigreBasicActions_Move;
    private readonly InputAction m_TardigreBasicActions_A;
    private readonly InputAction m_TardigreBasicActions_B;
    private readonly InputAction m_TardigreBasicActions_Y;
    private readonly InputAction m_TardigreBasicActions_X;
    private readonly InputAction m_TardigreBasicActions_RightTrigger;
    private readonly InputAction m_TardigreBasicActions_LeftTrigger;
    public struct TardigreBasicActionsActions
    {
        private @Inputs m_Wrapper;
        public TardigreBasicActionsActions(@Inputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_TardigreBasicActions_Move;
        public InputAction @A => m_Wrapper.m_TardigreBasicActions_A;
        public InputAction @B => m_Wrapper.m_TardigreBasicActions_B;
        public InputAction @Y => m_Wrapper.m_TardigreBasicActions_Y;
        public InputAction @X => m_Wrapper.m_TardigreBasicActions_X;
        public InputAction @RightTrigger => m_Wrapper.m_TardigreBasicActions_RightTrigger;
        public InputAction @LeftTrigger => m_Wrapper.m_TardigreBasicActions_LeftTrigger;
        public InputActionMap Get() { return m_Wrapper.m_TardigreBasicActions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TardigreBasicActionsActions set) { return set.Get(); }
        public void SetCallbacks(ITardigreBasicActionsActions instance)
        {
            if (m_Wrapper.m_TardigreBasicActionsActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_TardigreBasicActionsActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_TardigreBasicActionsActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_TardigreBasicActionsActionsCallbackInterface.OnMove;
                @A.started -= m_Wrapper.m_TardigreBasicActionsActionsCallbackInterface.OnA;
                @A.performed -= m_Wrapper.m_TardigreBasicActionsActionsCallbackInterface.OnA;
                @A.canceled -= m_Wrapper.m_TardigreBasicActionsActionsCallbackInterface.OnA;
                @B.started -= m_Wrapper.m_TardigreBasicActionsActionsCallbackInterface.OnB;
                @B.performed -= m_Wrapper.m_TardigreBasicActionsActionsCallbackInterface.OnB;
                @B.canceled -= m_Wrapper.m_TardigreBasicActionsActionsCallbackInterface.OnB;
                @Y.started -= m_Wrapper.m_TardigreBasicActionsActionsCallbackInterface.OnY;
                @Y.performed -= m_Wrapper.m_TardigreBasicActionsActionsCallbackInterface.OnY;
                @Y.canceled -= m_Wrapper.m_TardigreBasicActionsActionsCallbackInterface.OnY;
                @X.started -= m_Wrapper.m_TardigreBasicActionsActionsCallbackInterface.OnX;
                @X.performed -= m_Wrapper.m_TardigreBasicActionsActionsCallbackInterface.OnX;
                @X.canceled -= m_Wrapper.m_TardigreBasicActionsActionsCallbackInterface.OnX;
                @RightTrigger.started -= m_Wrapper.m_TardigreBasicActionsActionsCallbackInterface.OnRightTrigger;
                @RightTrigger.performed -= m_Wrapper.m_TardigreBasicActionsActionsCallbackInterface.OnRightTrigger;
                @RightTrigger.canceled -= m_Wrapper.m_TardigreBasicActionsActionsCallbackInterface.OnRightTrigger;
                @LeftTrigger.started -= m_Wrapper.m_TardigreBasicActionsActionsCallbackInterface.OnLeftTrigger;
                @LeftTrigger.performed -= m_Wrapper.m_TardigreBasicActionsActionsCallbackInterface.OnLeftTrigger;
                @LeftTrigger.canceled -= m_Wrapper.m_TardigreBasicActionsActionsCallbackInterface.OnLeftTrigger;
            }
            m_Wrapper.m_TardigreBasicActionsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @A.started += instance.OnA;
                @A.performed += instance.OnA;
                @A.canceled += instance.OnA;
                @B.started += instance.OnB;
                @B.performed += instance.OnB;
                @B.canceled += instance.OnB;
                @Y.started += instance.OnY;
                @Y.performed += instance.OnY;
                @Y.canceled += instance.OnY;
                @X.started += instance.OnX;
                @X.performed += instance.OnX;
                @X.canceled += instance.OnX;
                @RightTrigger.started += instance.OnRightTrigger;
                @RightTrigger.performed += instance.OnRightTrigger;
                @RightTrigger.canceled += instance.OnRightTrigger;
                @LeftTrigger.started += instance.OnLeftTrigger;
                @LeftTrigger.performed += instance.OnLeftTrigger;
                @LeftTrigger.canceled += instance.OnLeftTrigger;
            }
        }
    }
    public TardigreBasicActionsActions @TardigreBasicActions => new TardigreBasicActionsActions(this);
    public interface ITardigreBasicActionsActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnA(InputAction.CallbackContext context);
        void OnB(InputAction.CallbackContext context);
        void OnY(InputAction.CallbackContext context);
        void OnX(InputAction.CallbackContext context);
        void OnRightTrigger(InputAction.CallbackContext context);
        void OnLeftTrigger(InputAction.CallbackContext context);
    }
}
